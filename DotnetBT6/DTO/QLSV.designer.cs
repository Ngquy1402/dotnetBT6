#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotnetBT6.DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="demo")]
	public partial class QLSVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLSH(LSH instance);
    partial void UpdateLSH(LSH instance);
    partial void DeleteLSH(LSH instance);
    partial void InsertSV(SV instance);
    partial void UpdateSV(SV instance);
    partial void DeleteSV(SV instance);
    #endregion
		
		public QLSVDataContext() : 
				base(global::DotnetBT6.Properties.Settings.Default.demoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLSVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LSH> LSHes
		{
			get
			{
				return this.GetTable<LSH>();
			}
		}
		
		public System.Data.Linq.Table<SV> SVs
		{
			get
			{
				return this.GetTable<SV>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LSH")]
	public partial class LSH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Lop;
		
		private string _Name_Lop;
		
		private EntitySet<SV> _SVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LopChanging(int value);
    partial void OnID_LopChanged();
    partial void OnName_LopChanging(string value);
    partial void OnName_LopChanged();
    #endregion
		
		public LSH()
		{
			this._SVs = new EntitySet<SV>(new Action<SV>(this.attach_SVs), new Action<SV>(this.detach_SVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Lop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Lop
		{
			get
			{
				return this._ID_Lop;
			}
			set
			{
				if ((this._ID_Lop != value))
				{
					this.OnID_LopChanging(value);
					this.SendPropertyChanging();
					this._ID_Lop = value;
					this.SendPropertyChanged("ID_Lop");
					this.OnID_LopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Lop", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name_Lop
		{
			get
			{
				return this._Name_Lop;
			}
			set
			{
				if ((this._Name_Lop != value))
				{
					this.OnName_LopChanging(value);
					this.SendPropertyChanging();
					this._Name_Lop = value;
					this.SendPropertyChanged("Name_Lop");
					this.OnName_LopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LSH_SV", Storage="_SVs", ThisKey="ID_Lop", OtherKey="ID_Lop")]
		public EntitySet<SV> SVs
		{
			get
			{
				return this._SVs;
			}
			set
			{
				this._SVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SVs(SV entity)
		{
			this.SendPropertyChanging();
			entity.LSH = this;
		}
		
		private void detach_SVs(SV entity)
		{
			this.SendPropertyChanging();
			entity.LSH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SV")]
	public partial class SV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MSSV;
		
		private string _NameSV;
		
		private string _GioiTinh;
		
		private System.Nullable<double> _DTB;
		
		private System.Nullable<int> _ID_Lop;
		
		private EntityRef<LSH> _LSH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMSSVChanging(string value);
    partial void OnMSSVChanged();
    partial void OnNameSVChanging(string value);
    partial void OnNameSVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDTBChanging(System.Nullable<double> value);
    partial void OnDTBChanged();
    partial void OnID_LopChanging(System.Nullable<int> value);
    partial void OnID_LopChanged();
    #endregion
		
		public SV()
		{
			this._LSH = default(EntityRef<LSH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSSV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MSSV
		{
			get
			{
				return this._MSSV;
			}
			set
			{
				if ((this._MSSV != value))
				{
					this.OnMSSVChanging(value);
					this.SendPropertyChanging();
					this._MSSV = value;
					this.SendPropertyChanged("MSSV");
					this.OnMSSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSV", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string NameSV
		{
			get
			{
				return this._NameSV;
			}
			set
			{
				if ((this._NameSV != value))
				{
					this.OnNameSVChanging(value);
					this.SendPropertyChanging();
					this._NameSV = value;
					this.SendPropertyChanged("NameSV");
					this.OnNameSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTB", DbType="Float")]
		public System.Nullable<double> DTB
		{
			get
			{
				return this._DTB;
			}
			set
			{
				if ((this._DTB != value))
				{
					this.OnDTBChanging(value);
					this.SendPropertyChanging();
					this._DTB = value;
					this.SendPropertyChanged("DTB");
					this.OnDTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Lop", DbType="Int")]
		public System.Nullable<int> ID_Lop
		{
			get
			{
				return this._ID_Lop;
			}
			set
			{
				if ((this._ID_Lop != value))
				{
					if (this._LSH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LopChanging(value);
					this.SendPropertyChanging();
					this._ID_Lop = value;
					this.SendPropertyChanged("ID_Lop");
					this.OnID_LopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LSH_SV", Storage="_LSH", ThisKey="ID_Lop", OtherKey="ID_Lop", IsForeignKey=true)]
		public LSH LSH
		{
			get
			{
				return this._LSH.Entity;
			}
			set
			{
				LSH previousValue = this._LSH.Entity;
				if (((previousValue != value) 
							|| (this._LSH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LSH.Entity = null;
						previousValue.SVs.Remove(this);
					}
					this._LSH.Entity = value;
					if ((value != null))
					{
						value.SVs.Add(this);
						this._ID_Lop = value.ID_Lop;
					}
					else
					{
						this._ID_Lop = default(Nullable<int>);
					}
					this.SendPropertyChanged("LSH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
